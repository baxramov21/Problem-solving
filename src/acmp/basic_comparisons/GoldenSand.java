package acmp.basic_comparisons;

import java.util.Scanner;

public class GoldenSand {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println(GoldenSandSolution.profitFromSand(scanner.nextInt(), scanner.nextInt(), scanner.nextInt(), scanner.nextInt(), scanner.nextInt(), scanner.nextInt()));
    }
}

/**
 * Сотрудники завода по производству золотого песка из воздуха решили поправить свое финансовое положение.
 * Они пробрались на склад завода, где хранился золотой песок трех видов. Один килограмм золотого песка первого
 * вида они смогли бы продать за A1 рублей, второго вида – за A2 рублей, а третьего вида – за A3 рублей.
 * Так получилось, что у сотрудников оказалось с собой только три емкости: первая была рассчитана на B1 килограмм
 * груза, вторая на B2 килограмм, а третья на B3 килограмм. Им надо было заполнить полностью все емкости таким
 * образом, чтобы получить как можно больше денег за весь песок. При заполнении емкостей нельзя смешивать песок
 * разных видов, то есть, в одну емкость помещать более одного вида песка, и заполнять емкости песком так, чтобы
 * один вид песка находился более чем в одной емкости.
 * <p>
 * Требуется написать программу, которая определяет, за какую сумму предприимчивые сотрудники смогут продать
 * весь песок в случае наилучшего для себя заполнения емкостей песком.
 */

class GoldenSandSolution {
    static int profitFromSand(int a1, int a2, int a3, int b1, int b2, int b3) {
        if (a1 < a2) {
            int t = a2;
            a2 = a1;
            a1 = t;
        }

        if (a1 < a3) {
            int t = a3;
            a3 = a1;
            a1 = t;
        }

        if (a2 < a3) {
            int t = a2;
            a2 = a3;
            a3 = t;
        }


        // yoqaa

        if (b1 < b2) {
            int t = b2;
            b2 = b1;
            b1 = t;
        }

        if (b1 < b3) {
            int t = b3;
            b3 = b1;
            b1 = t;
        }

        if (b2 < b3) {
            int t = b2;
            b2 = b3;
            b3 = t;
        }


        return a1 * b1 + (a2 * b2) + (a3 * b3);
    }
}
