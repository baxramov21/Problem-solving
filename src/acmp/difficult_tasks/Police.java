package acmp.difficult_tasks;

import java.util.Scanner;

public class Police {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println(PoliceSolution.invoke(scanner.nextInt(), scanner.nextInt()));
    }
}

/*
 * Недавно Билл устроился на работу полицейским. Теперь ему предстоит каждый вечер обходить свой участок,
 * который представляет собой прямоугольник, состоящий из N×M кварталов. Каждый квартал имеет вид квадрата
 * размером 100 х 100 метров, кварталы отделены друг от друга прямыми улицами.
 *
 * Таким образом, через участок Билла проходит N+1 улица, идущая с запада на восток, и M+1 улица, идущая с севера на юг.
 * Перекрестки разбивают улицы на (N+1)*M + (M+1)*N отрезков, каждый из которых имеет длину 100 метров.
 *
 * Совершая обход, Билл выходит из полицейского управления, расположенного около юго-западного угла его участка,
 * обходит свой участок и возвращается в управление. Во время обхода Билл должен пройти по каждому отрезку улицы на
 * территории своего участка как минимум один раз. Известно, что во время обхода Билл проходит отрезок длиной 100 метров
 * за одну минуту. Выясните, какое минимальное число минут потребуется Биллу, чтобы совершить обход.
 *
 * Входные данные
 * Входной файл INPUT.TXT содержит натуральные числа N и M, не превышающие 10 000.
 *
 * Выходные данные
 * В выходной файл OUTPUT.TXT выведите минимальное время, за которое Билл может совершить обход.
 */

class PoliceSolution {
    static int invoke(int n, int m) {
        int number = (n + 1) * m + (m + 1) * n + n + m;
        if ((n % 2 == 1) && (m % 2 == 1) || Math.min(n, m) == 1)
            return (number - 2);
        else
            return number;

    }
}
